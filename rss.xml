<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[yerevancoder]]></title><description><![CDATA[A place for Armenian coders to talk]]></description><link>https://yerevancoder.com</link><generator>RSS for Node</generator><lastBuildDate>Fri, 12 Jan 2018 17:41:09 GMT</lastBuildDate><item><title><![CDATA[Racing to get a timeout]]></title><description><![CDATA[By Edgar Aroutiounian ,
catch me on  twitter Here is a simple and elegant way to say “Run this shell command within a
maximum of x seconds…]]></description><link>https://yerevancoder.com/2018-01-12-promises-and-timeouts/</link><guid isPermaLink="false">https://yerevancoder.com/2018-01-12-promises-and-timeouts/</guid><pubDate>Fri, 12 Jan 2018 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;em&gt;By Edgar Aroutiounian&lt;/em&gt;,
catch me on &lt;a href=&apos;https://twitter.com/@edgararout&apos;&gt;twitter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here is a simple and elegant way to say “Run this shell command within a
maximum of x seconds”&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;token string&quot;&gt;&apos;use strict&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; spawnAsync &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;@expo/spawn-async&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; with_timeout &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;cmd&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; limit &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;
  Promise&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;race&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;_&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; reject&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;
      &lt;span class=&quot;token function&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`Took longer than &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;limit &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; seconds`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;spawnAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;cmd&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Notice how we don’t need a trailing &lt;code&gt;await&lt;/code&gt; for the Promise and the
usage of &lt;code&gt;Promise.race&lt;/code&gt;.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[How much should you be paid in Armenian coding jobs?]]></title><description><![CDATA[By Edgar Aroutiounian ,
catch me on  twitter Here’s a topic that everyone should speak more openly about:  pay . Pay is a topic that people…]]></description><link>https://yerevancoder.com/2018-01-09-pay-rates-in-armenian-tech/</link><guid isPermaLink="false">https://yerevancoder.com/2018-01-09-pay-rates-in-armenian-tech/</guid><pubDate>Tue, 09 Jan 2018 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;em&gt;By Edgar Aroutiounian&lt;/em&gt;,
catch me on &lt;a href=&apos;https://twitter.com/@edgararout&apos;&gt;twitter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here’s a topic that everyone should speak more openly about: &lt;strong&gt;pay&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Pay is a topic that people don’t talk openly about in Armenian culture
and the tech sector also suffers from that. Here are some rough
estimates of what you can expect to receive as a programmer in Armenia
based off of my own understandings, talking with people in the
industry and having an Armenian business as well that paid
programmers. I’ve also included some figures for project quotes and
estimations.&lt;/p&gt;
&lt;h1&gt;Earning a salary&lt;/h1&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;studyHard&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;hours&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; person&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; hours_really_needed &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; hours &lt;span class=&quot;token operator&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; experience &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;practiceProjects&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;hours_really_needed&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;is_talent_in_armenia&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;talent&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;experience&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; person&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;Talent is underpaid&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;consider_overseas_options&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h2&gt;Interns&lt;/h2&gt;
&lt;p&gt;Interns &lt;em&gt;can&lt;/em&gt; get paid up to $250 a month, this is a coding based
internship. Most likely in a frontend kind of position, something
React, or Vue based. Cheaper, more enterprisey places use Angular. They
pay much less and offer less growth for interns. &lt;strong&gt;Never work for free
as a coding intern.&lt;/strong&gt; And &lt;strong&gt;ALWAYS&lt;/strong&gt; get something in written form,
never just oral contract.&lt;/p&gt;
&lt;h2&gt;Entry level&lt;/h2&gt;
&lt;p&gt;This group usually has about 6-12 months experience, they get paid
about $300-$500 a month.&lt;/p&gt;
&lt;h2&gt;Mid level&lt;/h2&gt;
&lt;p&gt;This group usually has about 12-24 months experience, they get paid
about $500-800 a month.&lt;/p&gt;
&lt;h2&gt;Experienced &amp;#x26; exceptional to keep&lt;/h2&gt;
&lt;p&gt;I purposefully don’t say senior because it is a nebulous term in this
industry. That said, an experienced programmer, that is someone that
can build up your startup/company usually gets at least $1000 a month
in Yerevan. Places like &lt;code&gt;PicsArt&lt;/code&gt; can afford up to $3000 a
month. &lt;strong&gt;Note&lt;/strong&gt;, $3000 is not a max or a ceiling. Quite a few people
get more than that but that is likely something specialized.&lt;/p&gt;
&lt;h3&gt;Caveats&lt;/h3&gt;
&lt;p&gt;This was assuming Yerevan, Gyumri rates are lower but there are rare
positions for experienced people that can fetch $2000 a month.&lt;/p&gt;
&lt;h1&gt;Doing a project as a freelancer&lt;/h1&gt;
&lt;p&gt;If you’re working as a freelancer, that is, contract work then you
must first make a decision. Will your contract work be with people in
Armenia or will it for overseas; this matters for tax reasons.&lt;/p&gt;
&lt;h2&gt;Projects solely based in Armenia&lt;/h2&gt;
&lt;p&gt;I recommend that you first establish the liquidity of the potential
business partner. I usually do this by asking if the potential
employer has at least $4000 at this moment ready to spend on the
project. This attitude will save you a lot of time and potential
misunderstandings later. Mobile development is hot, a mobile app that
takes about 3-4 months should cost at least $6,000-$10,000 depending of
course on various complexities and nuances of the app
itself. Recommend you quickly move on if the other side is
uncomfortable with these dollar figures.&lt;/p&gt;
&lt;h2&gt;Projects based overseas, outside of Armenia&lt;/h2&gt;
&lt;p&gt;Recommend that you open an Armenian business and utilize the tax
savings given to a business for outsources/contract work.&lt;/p&gt;
&lt;h1&gt;Programmer pay a month in Armenia TL;DR&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Intern&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;Entry&lt;/th&gt;
&lt;th&gt;Mid-level&lt;/th&gt;
&lt;th&gt;Experience &amp;#x26; Special&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;50 &amp;#x3C;= $ &amp;#x3C;= $200&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;$300 &amp;#x3C;= $ &amp;#x3C;= $500&lt;/td&gt;
&lt;td&gt;$500 &amp;#x3C;= $ &amp;#x3C;= $800&lt;/td&gt;
&lt;td&gt;$1000 &amp;#x3C;= $ &amp;#x3C;= $3000+&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</content:encoded></item><item><title><![CDATA[Elm, beauty of functional programming to frontend]]></title><description><![CDATA[By Grigori Aramyan ,
catch me on  twitter Elm is a strongly-typed functional programming language for
frontend. It has simplicity and…]]></description><link>https://yerevancoder.com/2017-12-31-elm-intro/</link><guid isPermaLink="false">https://yerevancoder.com/2017-12-31-elm-intro/</guid><pubDate>Sun, 31 Dec 2017 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;em&gt;By Grigori Aramyan&lt;/em&gt;,
catch me on &lt;a href=&apos;https://twitter.com/@griaram&apos;&gt;twitter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Elm is a strongly-typed functional programming language for
frontend. It has simplicity and maintainability of functional
programming paradigm in general, but exposes beauty of it’s own
architecture as well. It’s a compiled language and compiler makes max
efforts to ensure bug-free runtime code, which, on the other
hand-side, means your code won’t compile, if there’s a mistype, use of
undefined variable or similar stuff. Elm’s error messages are one of
the “proud points” of Evan’s team though (creator of Elm, Evan
Czaplicki). Compiler produces nice, human-readable messages with
hints, pointing exactly to where/what is wrong with code, assisting
devs as much as machines can probably do.&lt;/p&gt;
&lt;h2&gt;The Elm Architecture&lt;/h2&gt;
&lt;p&gt;Workflow of any Elm application is pretty straightforward: user fires a message (read event) by interacting with UI (text input, button click etc.), &lt;code&gt;update&lt;/code&gt; function handles it by pattern matching on type of message and modifying model accordingly, &lt;code&gt;view&lt;/code&gt; function re-renders UI using it’s virtual dom, so only minimal required render is performed. If you’re familiar with React/Redux, this architecture won’t be confusing. (Redux workflow was partially inspired by the elm architecture, according to Dan Abramov, author of Redux) Otherwise, it won’t be confusing after you play with it a bit. I made a simple todo app for this post, showing the very basics of Elm application, like module structure, code conventions, syntax, UI component styling, interop with JavaScript etc. You can find it under this repo: &lt;a href=&quot;https://github.com/grigor-aramyan/todo-elm&quot;&gt;https://github.com/grigor-aramyan/todo-elm&lt;/a&gt;. Read the Readme, it explains how you can run the app and make changes to elm code itself. I made a skeleton boilerplate of &lt;code&gt;Main.elm&lt;/code&gt; as well, that can get you up-and-running in seconds. You can play with it also, or just copy/paste it’s content in every Main.elm of your projects (main Elm module, from which compiler starts running, is called &lt;code&gt;Main.elm&lt;/code&gt;). Here’s the boilerplate gist: &lt;a href=&quot;https://gist.github.com/grigor-aramyan/b29a6272f5656d9ddc56f591a3e03063&quot;&gt;https://gist.github.com/grigor-aramyan/b29a6272f5656d9ddc56f591a3e03063&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Elm has it’s own REPL. You’ll get that after installing Elm on your
local machine from official website &lt;a href=&quot;http://elm-lang.org/&quot;&gt;http://elm-lang.org/&lt;/a&gt;. After
installing, type &lt;code&gt;elm&lt;/code&gt; in shell to see what you’ve got.&lt;/p&gt;
&lt;h2&gt;Type and type aliases&lt;/h2&gt;
&lt;p&gt;You can define your own types in Elm.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-elm&quot;&gt;&lt;code&gt;type Visualize =
    All
    | Completed
    | Active&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;This chunk defines “Visualize” type, which can have 3 values, either &lt;code&gt;All&lt;/code&gt;, &lt;code&gt;Completed&lt;/code&gt; or &lt;code&gt;Active&lt;/code&gt;. One use case for custom types is dispatch events/messages - by having enum-like data, &lt;code&gt;update&lt;/code&gt; function can precisely pattern match fired message and perform tasks accordingly. Also, it helps compiler to help us by warning, that not all possible type values are covered in &lt;code&gt;update&lt;/code&gt;. Actually, it’s not warning us, it just won’t compile.&lt;/p&gt;
&lt;p&gt;Type aliases make possible to combine primitive types into more
complex structures.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-elm&quot;&gt;&lt;code&gt;type alias TodoItem =
    { title : String
    , completed : Bool
    , id : Int
    }&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;The above chunk defines &lt;code&gt;TodoItem&lt;/code&gt; custom type (read, record or
object or class), that has 3 fields. Type aliases are often used to
define application model structure. Here’s an example of it:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-elm&quot;&gt;&lt;code&gt;type alias Model =
    { todoItems : List TodoItem
    , currentTodo : String
    , show : Visualize
    , currentIndex : Int
    }&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h2&gt;Interop, Encode/Decode&lt;/h2&gt;
&lt;p&gt;Elm application can communicate with JavaScript modules through ports
(and flags, actually, but ports are more flexible, so get to know them
from the beggining). Elm is strongly typed language, JavaScript - is
not, so there’s need of encoders and decoders, that will explain to
JavaScript modules what particular Elm values mean and vice
versa. Decoders have another major role - they want let data to pass
through port and into Elm, if it doesn’t comply to type defined in
decoder, so JavaScript side bugs will stay there only.&lt;/p&gt;
&lt;p&gt;The above mentioned Todo application has Encoders/Decoders and interop
with Javascript implemented, so you can check them at work. Also,
(actually, in first place) look up the &lt;code&gt;Get Started&lt;/code&gt; guide in Elm
official website docs. For community discussions, join Elm’s page on
Reddit: &lt;a href=&quot;https://www.reddit.com/r/elm/&quot;&gt;https://www.reddit.com/r/elm/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Partial function&lt;/h2&gt;
&lt;p&gt;Maybe one of the most challenging parts in Elm application are type
annotations. Here’s an example:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-elm&quot;&gt;&lt;code&gt;update : Msg -&gt; Model -&gt; (Model, Cmd Msg)&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;It says, function “update” receives 2 parameters of types “Msg” and
“Model”, then returns a type “Model, Cmd Msg”. Here’s the question -
why arrows, instead of commas. And here’s the answer - because Elm has
the idea of “partial functions” built within.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-elm&quot;&gt;&lt;code&gt;someFunc : String -&gt; Int -&gt; Int -&gt; Bool&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;If you give “someFunc” all 3 declared parameters, it will return a
“Bool” type value. On the other hand, if you give it just “String”, it
will return an anonymous function whith following type annotation
&lt;code&gt;Int -&gt; Int -&gt; Bool&lt;/code&gt; (the former “String” is excluded, because
it’s matched already with one-parameter function call). That’s the
reason why there is no clear separation of function arguments and it’s
return value - argument values can become return values, if partial
functions are in play.&lt;/p&gt;
&lt;p&gt;Hope this post will help to get some feel of Elm beauty.&lt;/p&gt;
&lt;p&gt;Happy hacking ;)&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Squashing commits with git]]></title><description><![CDATA[By Robert Adamian ,
find me on  twitter Git is a free and open source distributed version control system designed to handle everything from…]]></description><link>https://yerevancoder.com/2017-12-24-squash-commits-with-git/</link><guid isPermaLink="false">https://yerevancoder.com/2017-12-24-squash-commits-with-git/</guid><pubDate>Sun, 24 Dec 2017 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;em&gt;By Robert Adamian&lt;/em&gt;,
find me on &lt;a href=&apos;https://twitter.com/@paerallax&apos;&gt;twitter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/Eh8FBP7.png&quot; alt=&quot;alt text&quot; title=&quot;Git&amp;#x27;s logo&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;As with most other distributed version control systems, and unlike most client–server systems, every Git directory on every computer is a full-fledged repository with complete history and full version tracking abilities, independent of network access or a central server.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It’s also a must-have in any software developer’s toolchain. Using git for version control allows for powerful collaboration in tech teams. &lt;/p&gt;
&lt;p&gt;I won’t delve into Git’s history and the motivations behind it here as that deserves a post of its own or even a series of posts. Instead, we discuss a simple git feature you might need - squashing commits.  &lt;/p&gt;
&lt;p&gt;I needed to do this yesterday but forgot the command. First Stack Overflow answers were overly complicated for my use case. So here goes a simplified version. &lt;/p&gt;
&lt;p&gt;Let’s say you’ve been working on a feature and just finished. With git, it’s possible to squash previous commits into one. This helps you logically group commits together before sharing with others. Say you’ve been implementing &lt;a href=&quot;https://en.wikipedia.org/wiki/Depth-first_search&quot;&gt;DFS&lt;/a&gt; and this is your current &lt;code&gt;git log&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-zsh&quot;&gt;&lt;code&gt;* 16e9bbd (HEAD -&gt; master) depth-first search working
* 36ab519 fix vertex lookup
* aa264b1 label vertices
* bcd1838 recursive discovery
* 3a6eed3 isolate subgraph
* 7126d8e add topological sort&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Now you want to squash your latest 5 commits into one to have a nice history. &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-zsh&quot;&gt;&lt;code&gt;$ git rebase -i HEAD~5&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;After you run this command your terminal editor will open up with the following:  &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-zsh&quot;&gt;&lt;code&gt;pick 3a6eed3 isolate subgraph
pick bcd1838 recursive discovery
pick aa264b1 label vertices
pick 36ab519 fix vertex lookup
pick 16e9bbd depth-first search working&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Note that while doing interactive rebase, commits are displayed in reverse order.&lt;/p&gt;
&lt;p&gt;Replace the words “pick” with “squash” next to the commits you want to squash into the commit before it. In our case:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-zsh&quot;&gt;&lt;code&gt;pick 3a6eed3 isolate subgraph
squash bcd1838 recursive discovery
squash aa264b1 label vertices
squash 36ab519 fix vertex lookup
squash 16e9bbd depth-first search working&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Save and close the editor.&lt;/p&gt;
&lt;p&gt;If you’re too lazy to type that or you’re operating on a Commodore 64 and desperately need those additional few bytes, it’s also possible to write “s” for squash and “p” for pick. So the latest snippet is equivalent to:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-zsh&quot;&gt;&lt;code&gt;p 3a6eed3 isolate subgraph
s bcd1838 recursive discovery
s aa264b1 label vertices
s 36ab519 fix vertex lookup
s 16e9bbd depth-first search working&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Git will now give you the opportunity to change your commit message into something more descriptive. For doing that, replace this: &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-zsh&quot;&gt;&lt;code&gt;# This is a combination of 5 commits.
# The first commit&apos;s message is:
isolate subgraph

# This is the 2nd commit message:

recursive discovery

# This is the 3rd commit message:

label vertices

# This is the 4th commit message:

fix vertex lookup

# This is the 5th commit message:

depth-first seach working&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;With just: &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-zsh&quot;&gt;&lt;code&gt;implement depth-first search&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Note that your new commit message line shouldn’t start with &lt;code&gt;#&lt;/code&gt; as it’ll be treated as a comment.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git log&lt;/code&gt; should then return:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-zsh&quot;&gt;&lt;code&gt;* bb26b9d (HEAD -&gt; master) implement depth-first search
* ea1a7e8 add topological sort&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;That’s it! Now you have your commits squashed into one with an easier to navigate history.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Tech places and events in Armenia]]></title><description><![CDATA[By Edgar Aroutiounian ,
catch me on  twitter So you just landed in Yerevan and need a quick way to get a pulse of
the tech industry ASAP…]]></description><link>https://yerevancoder.com/2017-12-23-tech-places-and-events/</link><guid isPermaLink="false">https://yerevancoder.com/2017-12-23-tech-places-and-events/</guid><pubDate>Sat, 23 Dec 2017 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;em&gt;By Edgar Aroutiounian&lt;/em&gt;,
catch me on &lt;a href=&apos;https://twitter.com/@edgararout&apos;&gt;twitter&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;land_in_armenia&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;look_for_events&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;make_new_friends&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;So you just landed in Yerevan and need a quick way to get a pulse of
the tech industry ASAP. Here’s your insider’s crash course&lt;/p&gt;
&lt;h1&gt;Places for tech&lt;/h1&gt;
&lt;h2&gt;Yerevan-based&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://istc.am&quot;&gt;ISTC&lt;/a&gt;-The Innovative Solutions and Technologies
Center hosts many many tech events featuring some of the best minds
in the local Data Science scene and is home to quite a few startups.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.micarmenia.am&quot;&gt;MIC-Armenia&lt;/a&gt;-Microsoft Innovation Center
Armenia holds many trainings, hosts talks.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://aua.am&quot;&gt;AUA&lt;/a&gt;-Has a good computer science department,
comparable to a top 200 USA university. They also host many tech
events. &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.smartgate.vc/single-post/2017/12/22/Better-together-Hero-House-is-introduced-to-the-startup-community-and-friends&quot;&gt;HeroHouse&lt;/a&gt;-An
exciting and brand new initiative for startups in Armenia&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://tumo.org&quot;&gt;Tumo&lt;/a&gt;-A truly remarkable and unique place in the
world, Tumo hosts many tech events and startups.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Outside Yerevan&lt;/h2&gt;
&lt;p&gt;Outside the capital, there are less tech opportunities but they are
growing daily. Gyumri has its own Tumo, Loft and the
&lt;a href=&quot;http://gtc.am/en/home/&quot;&gt;GTC&lt;/a&gt;. Similarly, Vanadzor also has new
technology center: &lt;a href=&quot;http://vtc.am/en/&quot;&gt;VTC&lt;/a&gt;. In Artsakh, there is a
Tumo center as well.&lt;/p&gt;
&lt;h1&gt;Places coders hangout at&lt;/h1&gt;
&lt;h2&gt;Yerevan-based&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://www.achajour.am/en/&quot;&gt;Achajour&lt;/a&gt;-This is a cool cafe, usually many
English speakers and many coders, prime place to make friends and
run into familiar faces.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.facebook.com/The.LOFT.center/&quot;&gt;Loft&lt;/a&gt;-The best place to
get serious work done but usually just overnight. Overnight deal is
fantastic, only 1000 dram (~$2) for the entire night from 12AM-7AM,
unlimited coffee and snacks.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;Discussion groups&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://www.facebook.com/groups/410797219090898/&quot;&gt;iterate hackerspace&lt;/a&gt;-Facebook group.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;Tech events 2018&lt;/h1&gt;
&lt;h2&gt;Hackathons&lt;/h2&gt;
&lt;h3&gt;January&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://www.facebook.com/events/407926479641201/permalink/410025256097990/&quot;&gt;Global Game Jam Armenia 2018&lt;/a&gt;-January 26, 2018&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Meetups&lt;/h2&gt;
&lt;h3&gt;January&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://www.facebook.com/events/1811743828899726/&quot;&gt;GEEK Girls’ Dinner: Welcome to 2018&lt;/a&gt;-January 7, 2018&lt;/li&gt;
&lt;/ol&gt;</content:encoded></item><item><title><![CDATA[Free JavaScript learning material! (nodejs, React, JSConf)]]></title><description><![CDATA[By Edgar Aroutiounian ,
catch me on  twitter Here are some  JavaScript  resources you can use when learning. nodejs These are lecture notes…]]></description><link>https://yerevancoder.com/2017-12-21-javascript-resources/</link><guid isPermaLink="false">https://yerevancoder.com/2017-12-21-javascript-resources/</guid><pubDate>Thu, 21 Dec 2017 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;em&gt;By Edgar Aroutiounian&lt;/em&gt;,
catch me on &lt;a href=&apos;https://twitter.com/@edgararout&apos;&gt;twitter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here are some &lt;strong&gt;JavaScript&lt;/strong&gt; resources you can use when learning.&lt;/p&gt;
&lt;h2&gt;nodejs&lt;/h2&gt;
&lt;p&gt;These are lecture notes done for nodejs&lt;/p&gt;
&lt;h3&gt;English&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://iteratehackerspace.com/backend-bootcamp-english/lecture1.html&quot;&gt;lecture-1&lt;/a&gt;
&lt;a href=&quot;http://iteratehackerspace.com/backend-bootcamp-english/lecture2.html&quot;&gt;lecture-2&lt;/a&gt;
&lt;a href=&quot;http://iteratehackerspace.com/backend-bootcamp-english/lecture3.html&quot;&gt;lecture-3&lt;/a&gt;
&lt;a href=&quot;http://iteratehackerspace.com/backend-bootcamp-english/lecture4.html&quot;&gt;lecture-4&lt;/a&gt;
&lt;a href=&quot;http://iteratehackerspace.com/backend-bootcamp-english/lecture5.html&quot;&gt;lecture-5&lt;/a&gt;
&lt;a href=&quot;http://iteratehackerspace.com/backend-bootcamp-english/lecture6.html&quot;&gt;lecture-6&lt;/a&gt;
&lt;a href=&quot;http://iteratehackerspace.com/backend-bootcamp-english/lecture7.html&quot;&gt;lecture-7&lt;/a&gt;
&lt;a href=&quot;http://iteratehackerspace.com/backend-bootcamp-english/lecture8.html&quot;&gt;lecture-8&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;հայերեն&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://iteratehackerspace.com/backend-bootcamp-armenian/lecture1.html&quot;&gt;lecture-1&lt;/a&gt;
&lt;a href=&quot;http://iteratehackerspace.com/backend-bootcamp-armenian/lecture2.html&quot;&gt;lecture-2&lt;/a&gt;
&lt;a href=&quot;http://iteratehackerspace.com/backend-bootcamp-armenian/lecture3.html&quot;&gt;lecture-3&lt;/a&gt;
&lt;a href=&quot;http://iteratehackerspace.com/backend-bootcamp-armenian/lecture4.html&quot;&gt;lecture-4&lt;/a&gt;
&lt;a href=&quot;http://iteratehackerspace.com/backend-bootcamp-armenian/lecture5.html&quot;&gt;lecture-5&lt;/a&gt;
&lt;a href=&quot;http://iteratehackerspace.com/backend-bootcamp-armenian/lecture6.html&quot;&gt;lecture-6&lt;/a&gt;
&lt;a href=&quot;http://iteratehackerspace.com/backend-bootcamp-armenian/lecture7.html&quot;&gt;lecture-7&lt;/a&gt;
&lt;a href=&quot;http://iteratehackerspace.com/backend-bootcamp-armenian/lecture8.html&quot;&gt;lecture-8&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;ReactJS&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://iteratehackerspace.com/frontend-bootcamp-english/lecture-1&quot;&gt;lecture-1&lt;/a&gt;
&lt;a href=&quot;http://iteratehackerspace.com/frontend-bootcamp-english/lecture-2&quot;&gt;lecture-2&lt;/a&gt;
&lt;a href=&quot;http://iteratehackerspace.com/frontend-bootcamp-english/lecture-3&quot;&gt;lecture-3&lt;/a&gt;
&lt;a href=&quot;http://iteratehackerspace.com/frontend-bootcamp-english/lecture-4&quot;&gt;lecture-4&lt;/a&gt;
&lt;a href=&quot;http://iteratehackerspace.com/frontend-bootcamp-english/lecture-5&quot;&gt;lecture-5&lt;/a&gt;
&lt;a href=&quot;http://iteratehackerspace.com/frontend-bootcamp-english/lecture-6&quot;&gt;lecture-6&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;JavaScript conf&lt;/h2&gt;
&lt;h3&gt;Shahen Hovhannisyan:&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/1maSE3MD3RgtAGwvTj1mTDNTdmumpbUgm48azCcbp6r0/edit#slide=id.p&quot;&gt;V8 Engine&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Michael Manukyan:&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://jsconf17.mmanukyan.io/#/&quot;&gt;Production Webpack&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;General Հուշաթերթիկ&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/iteratehackerspace/cheatsheet&quot;&gt;cheatsheet&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[The success of JSConf in Armenia and what the future holds]]></title><description><![CDATA[By Edgar Aroutiounian ,
catch me on  twitter Genesis The first conference dedicated just to  JavaScript  in Armenia is
over.  JSConf 201…]]></description><link>https://yerevancoder.com/2017-12-20-init-post/</link><guid isPermaLink="false">https://yerevancoder.com/2017-12-20-init-post/</guid><pubDate>Wed, 20 Dec 2017 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;em&gt;By Edgar Aroutiounian&lt;/em&gt;,
catch me on &lt;a href=&apos;https://twitter.com/@edgararout&apos;&gt;twitter&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Genesis&lt;/h2&gt;
&lt;p&gt;The first conference dedicated just to &lt;strong&gt;JavaScript&lt;/strong&gt; in Armenia is
over. &lt;a href=&apos;https://jsconf.am&apos;&gt;JSConf 2017&lt;/a&gt; was an amazing
success and well over 700 people came to &lt;a href=&apos;https://aua.am&apos;&gt;AUA&lt;/a&gt;
to see, learn from and engage with the best programmers
in our Armenian tech community.&lt;/p&gt;
&lt;p&gt;I initially had a vision for a conference just for JavaScript in
Armenia, around May 2017 or so. Initial planning was to have the
conference be at &lt;a href=&apos;https://tumo.org/&apos;&gt;Tumo&lt;/a&gt; and I started
that conversation with Tumo officials. However, I started
to get overwhelmed, overworked and couldn’t keep up with all the demands.&lt;/p&gt;
&lt;p&gt;But then the most amazing thing happened, the programmer community in
Armenia clearly wanted the conference to still happen and Gevorg
Harutyunyan, my good friend whom I’ve known since basically day one of
starting
&lt;a href=&apos;http://iteratehackerspace.com&apos;&gt;iterate hackerspace&lt;/a&gt; took
the initiative and spearheaded the project. As I watched from San
Francisco, Gevorg assembled a team of very dedicated people from the
Yerevan tech scene and they started implementing JSConf Armenia.&lt;/p&gt;
&lt;p&gt;Initial estimates of conference attendees began at 100, we thought
that was a huge number at the time…but then it grew to 200
registrants, and then 400, then 800 and eventually to an insane 1500!&lt;/p&gt;
&lt;h2&gt;Future&lt;/h2&gt;
&lt;p&gt;The success of JSConf Armenia shows that there is a huge pent up
demand for community, for knowledge sharing and JavaScript in
Armenia. Many people asked when the next conference was going to be,
even while the current one didn’t even finish yet!&lt;/p&gt;
&lt;p&gt;So we have many more events planned, the future for tech in Armenia is
very bright and we must continue investing in our greatest resource,
our people.&lt;/p&gt;</content:encoded></item></channel></rss>